import{_ as i,c as s,a2 as e,o as l}from"./chunks/framework.Cb3oZuCp.js";const c=JSON.parse('{"title":"框架说明","description":"","frontmatter":{},"headers":[],"relativePath":"introduction-guide.md","filePath":"introduction-guide.md","lastUpdated":1730701860000}'),t={name:"introduction-guide.md"};function n(h,a,p,d,r,o){return l(),s("div",null,a[0]||(a[0]=[e(`<h1 id="框架说明" tabindex="-1">框架说明 <a class="header-anchor" href="#框架说明" aria-label="Permalink to &quot;框架说明&quot;">​</a></h1><h2 id="版本要求" tabindex="-1">版本要求 <a class="header-anchor" href="#版本要求" aria-label="Permalink to &quot;版本要求&quot;">​</a></h2><h3 id="node-版本" tabindex="-1">node 版本 <a class="header-anchor" href="#node-版本" aria-label="Permalink to &quot;node 版本&quot;">​</a></h3><blockquote><ul><li>node &gt;= v20.18.0</li><li>npm &gt;= 10.8.2</li></ul></blockquote><p>注意：已经通过package.json文件增加限制</p><h2 id="常用指令" tabindex="-1">常用指令 <a class="header-anchor" href="#常用指令" aria-label="Permalink to &quot;常用指令&quot;">​</a></h2><h3 id="安装方式" tabindex="-1">安装方式 <a class="header-anchor" href="#安装方式" aria-label="Permalink to &quot;安装方式&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="启动方式" tabindex="-1">启动方式 <a class="header-anchor" href="#启动方式" aria-label="Permalink to &quot;启动方式&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h3 id="打包方式" tabindex="-1">打包方式 <a class="header-anchor" href="#打包方式" aria-label="Permalink to &quot;打包方式&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h3 id="代码校验" tabindex="-1">代码校验 <a class="header-anchor" href="#代码校验" aria-label="Permalink to &quot;代码校验&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint:eslint</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint:stylelint</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint:prettier</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint:spell-check</span></span></code></pre></div><h3 id="文档相关" tabindex="-1">文档相关 <a class="header-anchor" href="#文档相关" aria-label="Permalink to &quot;文档相关&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:preview</span></span></code></pre></div><h2 id="开发工具" tabindex="-1">开发工具 <a class="header-anchor" href="#开发工具" aria-label="Permalink to &quot;开发工具&quot;">​</a></h2><h3 id="推荐-vscode-编辑器" tabindex="-1">推荐 vscode 编辑器 <a class="header-anchor" href="#推荐-vscode-编辑器" aria-label="Permalink to &quot;推荐 vscode 编辑器&quot;">​</a></h3><p>工程默认带着.vscode文件，文件中的配置开启了保存自动修复，如果使用WebStorm等编辑器请自行配置。</p><p>.vscode文件下包含：</p><ul><li>extensions.json 插件配置文件</li><li>global.code-snippets 代码片段文件</li><li>settings.json 编辑器配置</li></ul><h3 id="必要-vscode-插件" tabindex="-1">必要 vscode 插件 <a class="header-anchor" href="#必要-vscode-插件" aria-label="Permalink to &quot;必要 vscode 插件&quot;">​</a></h3><p>下面插件禁止全局禁用，项目级别的已自带安装并启用：</p><ul><li>vue-official</li><li>eslint</li><li>styleLint</li><li>prettier</li><li>code-spell-checker</li></ul><h2 id="单元测试" tabindex="-1">单元测试 <a class="header-anchor" href="#单元测试" aria-label="Permalink to &quot;单元测试&quot;">​</a></h2><p>后续增加单元测试集成。</p><h2 id="规范要求" tabindex="-1">规范要求 <a class="header-anchor" href="#规范要求" aria-label="Permalink to &quot;规范要求&quot;">​</a></h2><ul><li>Eslint 做代码质量检查</li><li>StyleLint 做样式检查</li><li>Prettier 做代码格式化</li><li>Code-spell-checker 中文拼写检查插件</li><li>Commitlint 做提交信息规范检查</li></ul><p>框架已经集成了以上规范，请按照要求进行代码编写。如果不按照规范编写，会导致代码质量问题。同时不按照提交规范提交代码，会导致提交信息不规范，无法提交。</p>`,29)]))}const u=i(t,[["render",n]]);export{c as __pageData,u as default};
